@inject IMediator Mediator

@if (Dto is null)
{
    return;
}

<div class="form-modal-base">
    <div class="form-modal">
        <EditForm Model="@Dto" OnValidSubmit="save">
            <FluentValidationValidator />
            <div class="form-modal-header">
                <h4 class="form-modal-title">@Dto.Title</h4>
                <button class="btn btn-close" @onclick="cancel" />
            </div>
            <div class="form-modal-content">
                <div class="form-modal-details">
                    <InputTextField
                        @bind-Value="@Dto.Title"
                        Id="title"
                        Label="Title"
                        ValidationFor="(() => Dto.Title)" />
                    <InputTextAreaField
                        @bind-Value="@Dto.Description"
                        Id="description"
                        Label="Description"
                        ValidationFor="(() => Dto.Description)" />
                    <div class="form-modal-tabs">
                        <InputSelectList
                            @bind-Value="@ProjectId"
                            Items="@projectsDictionary"
                            TKey="int"
                            Id="project"
                            Label="Project"
                            ValidationFor="@(() => Dto.ProjectId)" />
                        <InputSelectList
                            @bind-Value="@ParentId"
                            Items="@epicsDictionary"
                            TKey="int?"
                            Id="epic"
                            Label="Parent"
                            Disabled=@(Dto.ProjectId == 0)
                            ValidationFor="@(() => Dto.ParentId)" />
                    </div>
                    <div class="form-modal-tabs">
                        <InputSelectEnum
                            @bind-Value="@(Dto.Status)"
                            ValidationFor="(() => Dto.Status)"
                            Id="status"
                            Label="Status" />
                        <InputDateField
                            @bind-Value="@(Dto.Deadline)"
                            Label="Deadline"
                            Id="deadline"
                            ValidationFor="(() => Dto.Deadline)" />
                    </div>
                    <div class="form-modal-tabs">
                        <LabelValueDisplay
                            Id="created-at"
                            Label="Created at"
                            Value="@Dto.CreatedAt.ToString()"/>
                        <LabelValueDisplay
                            Id="start-date"
                            Label="Start date"
                            Value="@Dto.StartDate.ToString()"/>
                        <LabelValueDisplay
                            Id="end-date"
                            Label="End date"
                            Value="@Dto.EndDate.ToString()"/>
                    </div>
                </div>
            </div>
            <div class="form-modal-footer">
                <button class="btn btn-primary-dialog" @onclick="@(() => closeDialog = true)">Save</button>
                <button class="btn btn-primary-dialog" @onclick="@(() => closeDialog = false)">Save & stay</button>
                <button class="btn btn-danger" @onclick="cancel">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

<style>
    .list-size{
        height: 100px !important;
        max-height: 100px !important;
    }
</style>
