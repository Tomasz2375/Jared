@inject IMediator Mediator
@inject IJSRuntime JSRuntime

@if (Dto is null)
{
    return;
}

<div class="form-modal-base">
    <div class="form-modal">
        <EditForm Model="@Dto" OnValidSubmit="save">
            <FluentValidationValidator />
            <div class="form-modal-header">
                <h4 class="form-modal-title">@Dto.Code</h4>
                <button class="btn form-close" @onclick="cancel">✖</button>
            </div>
            <div class="form-modal-content">
                <div class="form-modal-tabs">
                    <TabForm
                        Id="0"
                        Label="Details"
                        ActiceTab=@tabNumber
                        OnTabSelected=@(_ => tabNumber = _)/>
                    <TabForm
                        Id="1"
                        Label="History"
                        ActiceTab=@tabNumber
                        OnTabSelected=@(_ => tabNumber = _)/>
                </div>
                <div class="form-modal-details">
                    @switch (tabNumber)
                    {
                        case 1:
                            <TaskDetailsHistory TaskHistoryDtos="@Dto.TaskHistories" />
                            break;
                        default:
                            <TaskDetailsDetails Dto="@Dto" />
                            break;
                    }
                </div>
            </div>
            <div class="form-modal-footer">
                <button class="btn btn-primary-dialog" @onclick="@(() => closeDialog = true)">Save</button>
                <button class="btn btn-primary-dialog" @onclick="@(() => closeDialog = false)">Save & stay</button>
                <button class="btn btn-danger" @onclick="cancel">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>
