@using Jared.Domain.Enums;
@using Jared.Presentation.Components.Basic
@using Jared.Presentation.Components.Forms
@typeparam TItem

@if (Pagination is null || Items is null)
{
    return;
}

<h3>@Title</h3>
<table class="data-grid">
    <thead>
        <tr>
            @foreach(var column in ItemsDefinition)
            {
                <th class="align-@column.Alignment.ToString().ToLower()" @onclick="(() => sortByColumn(column.ColumnName))">
                    @column.ColumnName
                    <span class="@sortCssClass(column.ColumnName)"/>
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Items)
        {
            <tr class="data-grid-body" @onclick="@(() => showDetails = int.Parse(item.Id.ToString()))">
                @foreach (var column in ItemsDefinition)
                {
                    <td class="align-@column.Alignment.ToString().ToLower()">
                        @item!.GetType().GetProperty(column.ColumnName)!.GetValue(item)
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<div class="align-center">
    <button type="button" class="btn nav-button@(Query.Page == 1 ? "-disable" : "")" @onclick="previousPage">&lt;&lt;</button>
    <span style="font-size:16px">@($"{Query.Page} / {Pagination.PageCount}")</span>
    <button type="button" class="btn nav-button@(Query.Page == Pagination.PageCount ? "-disable" : "")" @onclick="nextPage">&gt;&gt;</button>
</div>
<div class="align-center">
    <EditForm Model="Query">
        <label id="page-size">Page size: </label>
        <InputSelect DisplayName="Page size:" @bind-Value=@Query.PageSize>
            @foreach (var item in pageSizes)
            {
                <option value="@item" @onclick="pageSize">@item</option>
            }
        </InputSelect>
    </EditForm>
</div>
<div class="align-center">
    <span class="align-center">
        @($"{Pagination.ItemFrom} - {Pagination.ItemTo} from {Pagination.ItemsCount}")
    </span>
</div>

@if (showDetails != 0 && TaskDetailsForm is not null)
{
    <TaskDetailsForm Id="@showDetails"></TaskDetailsForm>
}

<style>
    .data-grid {
        width: 100%;
    }

    .data-grid-header {
        font-weight: bold;
    }

    .data-grid-body {
        border-top: solid 1px green;
    }

    .data-grid-body:hover {
        background-color: #DDDDDDDD;
        cursor: pointer;
    }

    .align-left{
        cursor: pointer;
        text-align: left !important;
    }
    .align-center{
        cursor: pointer;
        text-align: center !important;
    }
    .align-right{
        cursor: pointer;
        text-align: right !important;
    }

    .arrow {
        border: solid black;
        border-width: 0 3px 3px 0;
        display: inline-block;
        padding: 3px;
    }
    .arrow-up {
        transform: rotate(-135deg);
        -webkit-transform: rotate(-135deg);
    }
    .arrow-down {
        transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
    }
    .nav-button {
        color: #fff;
        background-color: #1b6ec2;
        border-color: #1861ac;
    }
    .nav-button-disable {
        color: #fff;
        background-color: #083b90;
        border-color: #06408a;
    }
    .nav-button:hover {
        color: #eee;
        background-color: #0a5db1;
        border-color: #07509b;
    }
</style>