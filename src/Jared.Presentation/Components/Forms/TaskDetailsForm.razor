@using Jared.Domain.Enums;
@using Jared.Presentation.Components.Basic
@inject IMediator Mediator

<div class="blazor-modal">
    <div class="blazor-modal-content-medium">
        <div class="blazor-modal-header">
            <h4 class="blazor-modal-title">@Dto.Code</h4>
            <button class="btn btn-close" @onclick="cancel" />
        </div>
        <EditForm Model="@Dto">
            <div class="blazor-modal-body-3">
                <div class="right-border">
                    <InputTextField
                        @bind-Value="@Dto.Title"
                        Id="title"
                        Label="Title"
                        ValidationFor="(() => Dto.Title)" />
                    <InputTextAreaField
                        @bind-Value="@Dto.Description"
                        Id="description"
                        Label="Description"
                        ValidationFor="(() => Dto.Description)" />
                </div>
                <div class="right-border">
                    <InputSelectList
                        @bind-Value="@ProjectId"
                        Items="@projectsDictionary"
                        TKey="int"
                        Id="project"
                        Label="Project"
                        ValidationFor="@(() => Dto.ProjectId)" />
                    <InputSelectList
                        @bind-Value="@EpicId"
                        Items="@epicsDictionary"
                        TKey="int?"
                        Id="epic"
                        Label="Epic"
                        Disabled=@(Dto.ProjectId == 0)
                        ValidationFor="@(() => Dto.EpicId)" />
                    <InputSelectList
                        @bind-Value="@ParentId"
                        Items="@parentDictionary"
                        TKey="int?"
                        Id="parent"
                        Label="Parent task"
                        Disabled=@(Dto.EpicId == 0 || Dto.EpicId is null)
                        ValidationFor="@(() => Dto.ParentId)" />
                    <InputSelectEnum
                        @bind-Value="@(Dto.Priority)"
                        ValidationFor="(() => Dto.Priority)"
                        Id="priority"
                        Label="Priority" />
                    <InputSelectEnum
                        @bind-Value="@(Dto.Status)"
                        ValidationFor="(() => Dto.Status)"
                        Id="status"
                        Label="Status" />
                </div>
                <div>
                    <InputDateField
                        @bind-Value="@(Dto.Deadline)"
                        Label="Deadline"
                        Id="deadline"
                        ValidationFor="(() => Dto.Deadline)" />
                    <InputTimeSpanField
                        @bind-Value="@(Dto.EstimatedTime)"
                        Label="Estimated time"
                        Id="estimated-time"
                        ValidationFor="(() => Dto.EstimatedTime)" />
                    <InputTimeSpanField
                        @bind-Value="@(Dto.TotalWorkTime)"
                        Label="Total work time"
                        Id="total-work-time"
                        ValidationFor="(() => Dto.TotalWorkTime)" />

                </div>
            </div>
        </EditForm>
        <div class="blazor-modal-footer">
            <button class="btn btn-primary-dialog" @onclick="save">Save task</button>
            <button class="btn btn-primary-dialog" @onclick="saveAndStay">Save and stay</button>
            <button class="btn btn-danger" @onclick="cancel">Cancel</button>
        </div>
    </div>
</div>
